<<Your Name Here>>
HW2
Written Questions

1.0 - complete
1.1 - complete
1.1.1 - not attempted
1.2 - complete
1.2.1 - not attempted
1.3 - complete
1.3.1 - The lowest value of max_rank for which no number of in shuffles reverse the deck is 5
1.3.2 - not attempted
2 - complete
3.1.

The base case is when lo = hi, so when n = 1 and S(1) = 2. 

In the recursive case, power() is run when proc(a, lo, m) is called and during the while loop. By adding
the number of times power is called in proc(a, lo, m) and the number of times it's called in the while 
loop, S(n) can be found recursively. The recursive form is then S(n) = S(n/2) + ceil(log(n)), where ceil()
is the ceiling function. For powers of 2, the recursive form is just S(n) = S(n/2) + log(n).

3.2

To find a solution for when n is a power of 2, let n = 2^k, where k is a natural number

The recursive formula:
S(2^k) = S(2^k/2) + log(2^k)

Simplify:
S(2^k) = S(2^(k-1)) + k

Continue to simplify, substituting recursively:
S(2^k) = S(2^(k-2)) + (k-1) + k
       = S(2^(k-3)) + (k-2) + (k-1) + k
       .
       .
       .
       = S(2^0) + 1 + 2 + 3 + ... + (k-2) + (k-1) + k

S(2^0) = S(1) = 2, therefore:
S(2^k) = 2 + SUM(first k numbers)

By the triangular numbers formula, the sum of the first k numbers equals k*(k+1)/2, therefore:
S(2^k) = 2 + k*(k+1)/2

Substituting n back in:
S(n) = 2 + log(n)*(log(n)+1)/2

